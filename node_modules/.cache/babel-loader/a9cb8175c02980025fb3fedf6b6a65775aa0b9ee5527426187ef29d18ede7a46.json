{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flavi\\\\Downloads\\\\React_Project\\\\react_app\\\\src\\\\components\\\\Auth\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport Button from \"../UI/Button\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAajn-MZjGmP1_6jFXPZoYox1pdWOaRvmI\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAajn-MZjGmP1_6jFXPZoYox1pdWOaRvmI\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Autehtification failed!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      history.replace(\"/\");\n    }).catch(err => {\n      alert(err.message);\n    });\n    const inputs = document.querySelectorAll('#email, #password');\n    inputs.forEach(input => {\n      input.value = '';\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useHistory","useState","useRef","useContext","AuthContext","Button","classes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","catch","err","alert","message","inputs","document","querySelectorAll","forEach","input","auth","control","toggle"],"sources":["C:/Users/flavi/Downloads/React_Project/react_app/src/components/Auth/AuthForm.jsx"],"sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nimport Button from \"../UI/Button\";\r\nimport classes from \"./AuthForm.module.css\";\r\n\r\nconst AuthForm = () => {\r\n  const history = useHistory();\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    setIsLoading(true);\r\n\r\n    let url;\r\n    if (isLogin) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAajn-MZjGmP1_6jFXPZoYox1pdWOaRvmI\";\r\n    } else {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAajn-MZjGmP1_6jFXPZoYox1pdWOaRvmI\";\r\n    }\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        return res.json().then((data) => {\r\n          let errorMessage = \"Autehtification failed!\";\r\n\r\n          throw new Error(errorMessage);\r\n        });\r\n      }\r\n    }).then(data => {\r\n      const expirationTime = new Date( new Date().getTime() + (+data.expiresIn * 1000) );\r\n      authCtx.login(data.idToken, expirationTime.toISOString());\r\n      history.replace(\"/\");\r\n    }).catch(err => {\r\n      alert(err.message);\r\n    });\r\n\r\n    const inputs = document.querySelectorAll('#email, #password');\r\n\r\n    inputs.forEach(input => {\r\n      input.value = '';\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input \r\n          type=\"email\" \r\n          id=\"email\" \r\n          required \r\n          ref={emailInputRef}\r\n          placeholder=\"Email\"\r\n           />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            required\r\n            ref={passwordInputRef}\r\n            placeholder=\"Password\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n        {/* <div className={classes.actions}> */}\r\n          {!isLoading && (\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          )}\r\n          {isLoading && <p>Loading...</p>}\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}